buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'name.remal:gradle-plugins:1.5.0'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.0'
        classpath 'org.jetbrains.kotlin:kotlin-allopen:1.6.10'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        classpath 'org.jetbrains.kotlin:kotlin-noarg:1.6.10'
        classpath 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.19.0'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:10.2.1'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.6.10'
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    version '0.0.1-SNAPSHOT'
    dependencyManagement {
        dependencies {
            dependencySet(group: 'org.apache.logging.log4j', version: '2.17.2') {
                entry 'log4j-api'
                entry 'log4j-to-slf4j'
            }
            dependencySet(group: 'com.fasterxml.jackson.core', version: '2.13.1') {
                entry 'jackson-core'
                entry 'jackson-databind'
            }
            dependencySet(group: 'com.fasterxml.jackson.dataformat', version: '2.13.1') {
                entry 'jackson-dataformat-csv'
                entry 'jackson-dataformat-xml'
                entry 'jackson-dataformat-yaml'
            }
            dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1'
            dependency 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.1'
            dependency 'com.github.stefanbirkner:system-lambda:1.2.1'
            dependency 'com.github.tomakehurst:wiremock-jre8:2.32.0'
            dependency 'com.puppycrawl.tools:checkstyle:10.1'
            dependencySet(group: 'io.cucumber', version: '7.2.3') {
                entry 'cucumber-java'
                entry 'cucumber-junit-platform-engine'
                entry 'cucumber-spring'
            }
            dependency('io.github.bonigarcia:webdrivermanager:5.1.0')
            dependency('net.objecthunter:exp4j:0.4.8')
            dependencySet(group: 'net.sourceforge.pmd', version: '6.43.0') {
                entry 'pmd'
                entry 'pmd-core'
                entry 'pmd-java'
            }
            dependency 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'
            dependencySet(group: 'org.junit.jupiter', version: '5.8.2') {
                entry 'junit-jupiter'
                entry 'junit-jupiter-api'
                entry 'junit-jupiter-engine'
                entry 'junit-jupiter-params'
            }
            dependencySet(group: 'org.junit.platform', version: '1.8.2') {
                entry 'junit-platform-commons'
                entry 'junit-platform-engine'
                entry 'junit-platform-suite'
            }
            dependency 'org.mockito:mockito-core:4.3.1'
            dependency 'org.mockito.kotlin:mockito-kotlin:4.0.0'
            dependency 'org.pitest:pitest-junit5-plugin:0.15'
            dependency 'org.pitest:pitest-command-line:1.7.4'
            dependency 'org.projectlombok:lombok:1.18.22'
            dependency('org.seleniumhq.selenium:selenium-java:4.1.2') {
                exclude 'commons-logging:commons-logging'
            }
            dependency 'org.skyscreamer:jsonassert:1.5.0'
            dependency 'org.springdoc:springdoc-openapi-ui:1.6.6'
            dependencySet(group: 'org.springframework.boot', version: '2.6.4') {
                entry 'spring-boot-starter'
                entry('spring-boot-starter-test') {
                    exclude 'org.junit.jupiter:junit-jupiter'
                    exclude 'org.junit.jupiter:junit-jupiter-api'
                    exclude 'org.junit.vintage:junit-vintage-engine'
                }
                entry 'spring-boot-starter-web'
            }
            dependency 'com.vladmihalcea:hibernate-types-52:2.14.0'
            dependency 'org.flywaydb:flyway-core:8.5.5'
        }
    }
}

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    /*apply plugin: 'jacoco'*/
    apply plugin: 'name.remal.sonarlint'
    apply plugin: 'org.sonarqube'
    apply plugin: 'info.solidsoft.pitest'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'io.gitlab.arturbosch.detekt'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'org.jetbrains.dokka'

    sourceCompatibility = 15

    dependencies {
        checkstyle 'com.puppycrawl.tools:checkstyle'

        compileOnly 'org.projectlombok:lombok'

        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'

        testImplementation 'io.cucumber:cucumber-java'
        testImplementation 'io.cucumber:cucumber-junit-platform-engine'
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testImplementation 'org.junit.platform:junit-platform-commons'
        testImplementation 'org.junit.platform:junit-platform-suite'
        testRuntimeOnly 'org.junit.platform:junit-platform-engine'
        testImplementation 'org.mockito:mockito-core'

        pitest 'org.pitest:pitest-junit5-plugin'
        pitest 'org.pitest:pitest-command-line:1.7.3'
    }

    checkstyleMain {
        configFile = file('../config/checkstyle/checkstyleMain.xml')
        maxWarnings = 0
    }

    checkstyleTest {
        configFile = file('../config/checkstyle/checkstyleTest.xml')
        maxWarnings = 0
    }

    /*jacoco {
        toolVersion = "0.8.6"
    }*/

    /*jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.0
                }
            }
        }
    }
    check.dependsOn jacocoTestCoverageVerification*/

    /*jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled true
            html.enabled true
        }
    }
    test.finalizedBy jacocoTestReport*/

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '15'
        }
    }

    ktlint {
        version.set("0.42.1")
    }

    pitest {
        targetClasses.set(['com.nelkinda.*', 'com.vervetronics.*'])
        pitestVersion.set('1.7.2')
        timestampedReports.set(false)
        testPlugin.set('junit5')
        outputFormats.set(['XML', 'HTML'])
        mutators.set(['DEFAULTS', 'STRONGER', 'CONSTRUCTOR_CALLS', 'INLINE_CONSTS', 'REMOVE_CONDITIONALS', 'REMOVE_INCREMENTS'])
        mutationThreshold.set(100)
        coverageThreshold.set(100)
    }

    pmd {
        ruleSets = []
        consoleOutput = true
        dependencies {
            pmd 'net.sourceforge.pmd:pmd'
            pmd 'net.sourceforge.pmd:pmd-core'
            pmd 'net.sourceforge.pmd:pmd-java'
        }
    }

    pmdMain {
        ruleSetFiles = files('../config/pmd/pmdMain.xml')
    }

    pmdTest {
        ruleSetFiles = files('../config/pmd/pmdTest.xml')
    }

    test {
        useJUnitPlatform()
    }
}

wrapper {
    gradleVersion = '7.4'
    distributionType = Wrapper.DistributionType.ALL
}
